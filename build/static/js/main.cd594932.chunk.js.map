{"version":3,"sources":["components/employeeInfo/Employee.js","utils/API.js","components/filter/filter.js","components/searchBar/searchBar.js","App.js","serviceWorker.js","index.js"],"names":["descendingComparator","a","b","orderBy","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","order","onRequestSort","TableHead","TableRow","map","headCell","TableCell","key","align","padding","sortDirection","TableSortLabel","active","direction","onClick","property","event","className","visuallyHidden","useStyles","makeStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","border","clip","height","margin","overflow","position","top","EnhancedTable","console","log","rows","employee","first","last","email","phone","photo","React","useState","setOrder","setOrderBy","selected","page","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","TableContainer","Table","aria-labelledby","size","aria-label","numSelected","rowCount","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","hover","tabIndex","alight","src","alt","widht","style","colSpan","TablePagination","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","value","API","axios","get","filter","empAr","toLowerCase","includes","Search","TextField","color","variant","type","name","onChange","handleInputChange","App","setState","state","search","searchedEmps","currentSearchArray","employees","then","response","employeeDetails","data","results","employeeInfo","picture","thumbnail","catch","err","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.cd594932.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\n\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n    { id: 'image', numeric: false, disablePadding: true, label: 'Profile Image' },\n    { id: 'fname', numeric: true, disablePadding: false, label: 'First Name' },\n    { id: 'lname', numeric: true, disablePadding: false, label: 'Last Name' },\n    { id: 'email', numeric: true, disablePadding: false, label: 'Email' },\n    { id: 'phonenumber', numeric: true, disablePadding: false, label: 'Phone' },\n];\n\nfunction EnhancedTableHead(props) {\n    const { classes, order, orderBy, onRequestSort } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow >\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align='center'\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function EnhancedTable(props) {\n    console.log(props);\n    const rows = props.rows.map(function (employee) {\n        return {\n            id: employee.id,\n            first: employee.first,\n            last: employee.last,\n            email: employee.email,\n            phone: employee.phone,\n            photo: employee.photo\n        }\n    });\n    console.log(\"This is the rows below\")\n    console.log(rows);\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('last');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getComparator(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            tabIndex={-1}\n                                            key={row.id}\n                                        >\n                                            <TableCell alight=\"center\">{<img src={row.photo} alt={row.last} widht=\"50\" height=\"50\" />}</TableCell>\n                                            <TableCell align=\"center\">{row.first}</TableCell>\n                                            <TableCell align=\"center\">{row.last}</TableCell>\n                                            <TableCell align=\"center\">{row.email}</TableCell>\n                                            <TableCell align=\"center\">{row.phone}</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import axios from \"axios\";\n\nconst API = {\n    getEmployees: function() {\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\")\n    }\n}\n\nexport {API}","const filter = {\n\n    // Check employee array to find item matching in search\n    searchEmployees: (value, empAr) => {\n        let queriedEmployee = empAr.filter((employee) => {\n            return employee.first.toLowerCase().includes(value.toLowerCase()) ||\n                employee.last.toLowerCase().includes(value.toLowerCase()) ||\n                employee.phone.toLowerCase().includes(value.toLowerCase()) ||\n                employee.email.toLowerCase().includes(value.toLowerCase())\n        })\n        return queriedEmployee;\n    },\n\n    // // Function to compare values in array and sort (ascending or descending)\n    // compareValues: (key, order = \"asc\") => {\n    //     return function compare(a, b) {\n    //         const optionA = a[key].toUpperCase();\n    //         const optionB = b[key].toUpperCase();\n\n    //         let comparison = 0;\n    //         if (optionA > optionB) {\n    //             comparison = 1;\n    //         } else if (optionA < optionB) {\n    //             comparison = -1;\n    //         }\n    //         return (\n    //             (order === \"desc\") ? (comparison * -1) : comparison\n    //         );\n    //     };\n    // }\n}\n\nexport { filter }\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nfunction Search(props) {\n    return (\n        <TextField className=\"searchBox\" color=\"secondary\" variant=\"outlined\" label=\"Search Here\" type=\"search\" name=\"search\" onChange={props.handleInputChange} />\n    )\n}\n\nexport default Search;\n\n\n// <input className=\"searchBar\" type=\"text\" placeholder=\"Search for last name...\" type=\"search\" handleInputChange={this.handleInputChange}></input>","// destructuring component and able to use Component in class component versus React.Component\nimport React, { Component, useState } from 'react';\nimport './App.css';\nimport { API } from './utils/API';\nimport EnhancedTable from './components/employeeInfo/Employee';\nimport { filter } from \"./components/filter/filter\";\nimport Search from \"./components/searchBar/searchBar\"\n\n// class component\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      employees: [],\n      currentSearchArray: []\n    };\n  }\n  // api calls in this function (life cycle method)\n  componentDidMount() {\n    API.getEmployees()\n      .then((response) => {\n        console.log(response);\n        let employeeDetails = response.data.results.map(employeeInfo => {\n          return {\n            id: employeeInfo.id.value,\n            first: employeeInfo.name.first,\n            last: employeeInfo.name.last,\n            email: employeeInfo.email,\n            phone: employeeInfo.phone,\n            photo: employeeInfo.picture.thumbnail\n          }\n        })\n        this.setState({\n          employees: employeeDetails,\n          currentSearchArray: employeeDetails\n        });\n\n      })\n      .catch(err => console.log(err));\n  }\n  // Function to allow user to search employees\n  handleInputChange = event => {\n    let value = event.target.value;\n    const name = event.target.name;\n    // Set the state to input\n    this.setState({\n      [name]: value\n    }, () => {\n      if (this.state.search) {\n        let searchedEmps = filter.searchEmployees(this.state.search, this.state.currentSearchArray);\n        this.setState({\n          employees: searchedEmps,\n          orderBy: \"\"\n        })\n      } else {\n        this.setState({\n          employees: this.state.currentSearchArray,\n          orderBy: \"\"\n        })\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* {console.log(this.state.employees)} */}\n        <div className=\"container\">\n          <div className=\"row header\">\n            <div className=\"col-12 d-flex justify-content-center\">\n              <h1>Employee Tracker</h1>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 d-flex justify-content-center\">\n              <Search handleInputChange={this.handleInputChange} />\n            </div>\n            <div className=\"col-12 d-flex justify-content-center\">\n              <button className=\"btn btn-primary searchBtn\">Search</button>\n            </div>\n          </div>\n          <br />\n          <EnhancedTable rows={this.state.currentSearchArray} />\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Employee from './components/employeeInfo/Employee';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n// ReactDOM.render(<Demo />, document.querySelector('#root'));\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Employee /> */}\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}